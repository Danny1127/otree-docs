.. _v0.5

Version 0.5 pre-release
=======================

.. note::

    This is the info for the pre-release (beta)
    version of oTree.

    For the stable release, see the main setup page.

If you want you can try the pre-release version of oTree 0.5.
You could try it if you are curious to see the latest development,
or if you are having problems using oTree 0.4.


What's new
----------

oTree 0.5 has a different architecture based on push and WebSockets,
through use of `Django Channels <https://github.com/andrewgodwin/channels>`__.

It should run faster and support more concurrent players.

There is also a feature called "Rooms" that aims to replace the "Default session" feature,
but that is still under development and not ready yet.

Installation
------------

To install, run this (note the ``--pre`` in the command)::

    pip install --upgrade --pre otree-core
    otree resetdb

A new pre-release is published frequently,
so it's good to run the above commands every few days,
to get the latest bugfixes.

Install Redis
~~~~~~~~~~~~~

You also need to install Redis server and run it on its default port (6379).

- Windows: download and run the `MSI <https://github.com/MSOpenTech/redis/releases>`__.
- Mac: if using Homebrew, you can follow the instructions here: `here <http://richardsumilang.com/server/redis/install-redis-on-os-x/>`__.
- Ubuntu: download `here <https://launchpad.net/~chris-lea/+archive/ubuntu/redis-server>`__.

You can test if Redis is running as follows:

.. code-block:: python

    >>> import redis
    >>> r = redis.Redis()
    >>> r.ping()

Running locally
---------------

If running locally, you can just use ``otree runserver`` as before.

Deploying to Heroku
-------------------

You need to install Heroku's `Redis add-on <https://elements.heroku.com/addons/heroku-redis>`__.

You need to change your ``Procfile`` to the following:

.. code-block:: bash

    web: daphne otree.asgi:channel_layer --port $PORT --bind 0.0.0.0 -v2
    worker: python manage.py runworkers

Limitations
-----------

v0.5 does not yet have the ability to auto-submit pages upon timeout if a user closes their browser.
This means that if a multi-player game is under way and a user closes their browser window,
you would need to manually click the "advance slowest participants" button to ensure that other users
 don't get stuck waiting for that player.

Downgrading back to oTree stable release
----------------------------------------

.. code-block:: bash

    pip uninstall otree-core
    pip install otree-core